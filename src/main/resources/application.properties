# .properties 파일은 프로젝트 설정 파일로, apprentice.properties 는 별도로 관리 가능

# [1] 서버 포트 설정
server.port=8080

# [2] JDBC 데이터베이스 연결 설정 , DAO 계층에서 사용될 정보
# 1. 연결할 db의 주소
spring.datasource.url=jdbc:mysql://localhost:3306/sayKorean
# 2. 연결할 db의 사용자 이름
spring.datasource.username=root
# 3. 연결할 db의 비밀번호 , 실제 운영 시에는 깃허브에 올리지 않도록 주의
spring.datasource.password=1234

# [3] 로깅 설정
# 로그 레벨 기본값은 info. 필요에 따라 debug 로 변경 가능
logging.level.root=warn

# 1. 로그 레벨 단계
# 순서 : debug < info < warn < error
# info 로 설정하면 info/warn/error 레벨 로그 출력
# warn 으로 설정하면 warn/error 로그만 출력
logging.level=warn

# 2. 로그 파일 저장 위치 (gitignore에 반드시 추가해야 함)
logging.file.name=logs/app.log

# 3. 로그 파일 용량/개수 제한
logging.logback.rollingpolicy.max-file-size=1MB
# 3-2 : 로그 파일 최대 10개까지 보관
logging.logback.rollingpolicy.max-history=10

# 4. 스프링 부트 시작 시 불필요한 로그를 줄이는 설정 (필요 시 주석 해제)
# spring.main.log-startup-info=false
# logging.level.org.springframework.boot.web=warn
# logging.level.org.springframework.boot.web.embedded.tomcat=warn
# logging.level.org.apache.catalina=warn
# logging.level.org.apache.coyote=warn
# logging.level.org.springframework.web=warn

# 5. 로그 출력 포맷
# %msg : 로그 메시지 , %n : 줄바꿈 , %d{yyyy-MM-dd HH:mm:ss} : 날짜/시간
# %level : 로그 레벨 , %logger : 로그 발생 위치
# logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} %msg %n
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %level %logger %msg %n